name: Set up ZMK build environment
description: Build and test environment for ZMK firmware using Nix

inputs:
  flake:
    description:
      "Absolute path to directory containing flake.nix (if unspecified uses the
      one provided by the action)"
    type: string
    required: false
  config:
    description: "Config or tests path relative to repo root"
    type: string
    required: false
    default: "config"
  always-update-west:
    description: "Update west modules on cache hit"
    type: boolean
    required: false

outputs:
  build_cmd_prefix:
    description: "Prefix for commands to be run in the build environment"
    value: ${{ steps.export.outputs.build_cmd_prefix }}
  ZMK_BUILD_DIR:
    description: "Path to build directory"
    value: ${{ steps.export.outputs.ZMK_BUILD_DIR }}
  ZMK_WORKSPACE:
    description: "Path to build environment"
    value: ${{ steps.workspace.outputs.ZMK_WORKSPACE }}
  ZMK_SRC_DIR:
    description: "Path to zmk/app if detected"
    value: ${{ steps.export.outputs.ZMK_SRC_DIR }}
  ZMK_EXTRA_MODULES:
    description: "Path to repo root if repo is a module"
    value: ${{ steps.export.outputs.ZMK_EXTRA_MODULES }}

runs:
  using: composite
  steps:
    - name: Install nix
      uses: nixbuild/nix-quick-install-action@v29
      with:
        nix_on_tmpfs: true

    - name: Cache nix derivations
      uses: nix-community/cache-nix-action@v5
      with:
        primary-key:
          nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
        restore-prefixes-first-match: nix-${{ runner.os }}-

        # Purge old caches and garbage collect new one if there wasn't an exact match
        purge: true
        purge-prefixes: nix-${{ runner.os }}-
        purge-created: 0
        purge-primary-key: never
        gc-max-store-size-linux: 0

    - name: Move config to temporary isolated workspace
      id: workspace
      shell: bash
      run: |
        # Necessary for repos that are Zephyr modules but doesn't hurt in general
        workspace="${RUNNER_TEMP}/tests" && echo "ZMK_WORKSPACE=${workspace}" >> $GITHUB_OUTPUT
        mkdir -p "${workspace}/${{ inputs.config }}"
        cp -R ${{ inputs.config }}/* "${workspace}/${{ inputs.config }}/"

    - name: Set flake input
      shell: bash
      run: |
        # Defaulting ${{ inputs.flake }} to ${{ github.action_path }} doesn't work in containers
        # due to https://github.com/actions/runner/issues/716 (still applies as of 2024-12-20).
        if [ -n "${{ inputs.flake }}" ]; then
          echo "flake=${{ inputs.flake }}" >> $GITHUB_ENV
        else
          echo "flake=${GITHUB_ACTION_PATH}" >> $GITHUB_ENV
        fi

    - name: Get Zephyr version
      shell: sh -x {0}
      run: |
        echo "ZEPHYR_VERSION=$(nix develop ${{ env.flake }} --command printenv ZEPHYR_VERSION)" >> $GITHUB_ENV

    - name: Cache west modules
      id: cache-west
      uses: actions/cache@v4
      with:
        path: |
          ${{ steps.workspace.outputs.ZMK_WORKSPACE }}/modules/
          ${{ steps.workspace.outputs.ZMK_WORKSPACE }}/tools/
          ${{ steps.workspace.outputs.ZMK_WORKSPACE }}/zephyr/
          ${{ steps.workspace.outputs.ZMK_WORKSPACE }}/bootloader/
          ${{ steps.workspace.outputs.ZMK_WORKSPACE }}/zmk/
        key:
          zephyr-${{ env.ZEPHYR_VERSION }}-${{ hashFiles(format('{0}/west.yml',
          inputs.config)) }}
        restore-keys: |
          zephyr-${{ env.ZEPHYR_VERSION }}-
          zephyr-

    - name: Initialize west workspace
      working-directory: ${{ steps.workspace.outputs.ZMK_WORKSPACE }}
      shell: bash
      run: |
        nix develop ${{ env.flake }} --command west init -l "${{ inputs.config }}"
        if [ ${{ steps.cache-west.outputs.cache-hit != 'true' || inputs.always-update-west }} == true ]; then
          nix develop ${{ env.flake }} --command west update
        fi
        nix develop ${{ env.flake }} --command west zephyr-export

    - name: Export outputs
      id: export
      working-directory: ${{ steps.workspace.outputs.ZMK_WORKSPACE }}
      shell: bash
      run: |
        echo "build_cmd_prefix=nix develop ${{ env.flake }} --command" >> $GITHUB_OUTPUT
        echo "ZMK_SRC_DIR=$(find -path '*/zmk/app/west.yml' -printf '%h\n' -quit)" >> $GITHUB_OUTPUT
        if [ -e ${GITHUB_WORKSPACE}/zephyr/module.yml ]; then
          echo "ZMK_EXTRA_MODULES=${GITHUB_WORKSPACE}" >> $GITHUB_OUTPUT
        fi
        echo "ZMK_BUILD_DIR=$(mktemp -p ${RUNNER_TEMP} -d build.XXXXXXXXXX)" >> $GITHUB_OUTPUT
